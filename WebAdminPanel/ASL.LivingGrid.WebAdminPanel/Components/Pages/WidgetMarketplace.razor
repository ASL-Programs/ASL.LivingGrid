@page "/widget-marketplace"
@using ASL.LivingGrid.WebAdminPanel.Models
@inject IWidgetMarketplaceService Marketplace
@inject IWidgetService WidgetService
@inject IJSRuntime JS

<h3>Widget Marketplace</h3>

@if (widgets == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        @foreach (var w in widgets)
        {
            <div class="col-md-4 mb-3">
                <div class="card h-100">
                    <img class="card-img-top" src="@w.PreviewImage" alt="@w.Name" />
                    <div class="card-body">
                        <h5 class="card-title">@w.Name</h5>
                        <p class="card-text">@w.Description</p>
                        <p class="small text-muted">Used @usage.GetValueOrDefault(w.Id) times</p>
                        <button class="btn btn-primary" @onclick="ShowComingSoon">Import</button>
                        <button class="btn btn-secondary ms-2" @onclick="ShowComingSoon">Export</button>
                    </div>
                </div>
            </div>
        }
    </div>
}
@if (!string.IsNullOrEmpty(status))
{
    <div class="alert alert-info">@status</div>
}
@code {
    private List<MarketplaceWidget>? widgets;
    private Dictionary<string, int> usage = new();
    private string? status;

    protected override async Task OnInitializedAsync()
    {
        widgets = (await Marketplace.ListAsync()).ToList();
        foreach (var w in widgets)
        {
            usage[w.Id] = await WidgetService.GetUsageAsync(w.Id);
        }
    }

    private void ShowComingSoon()
    {
        status = "Hazırlanır / Çox yaxında!";
    }
}
