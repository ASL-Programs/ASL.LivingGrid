@page "/themes"
@using Microsoft.AspNetCore.Components.Forms
@inject IThemeService ThemeService
@inject IJSRuntime JS

<h3>Theme Marketplace</h3>

<div class="mb-3">
    <InputFile OnChange="OnFileSelected" />
    <input class="form-control mt-2" placeholder="Theme name" @bind="newThemeName" />
    <button class="btn btn-primary mt-2" @onclick="UploadTheme" disabled="@(selectedFile==null || string.IsNullOrWhiteSpace(newThemeName))">Import Theme</button>
</div>

<ul class="list-group">
    @foreach (var theme in themes)
    {
        <li class="list-group-item d-flex justify-content-between align-items-center">
            <span>@theme</span>
            <span>
                <button class="btn btn-sm btn-secondary me-2" @onclick="() => ApplyTheme(theme)">Apply</button>
                <button class="btn btn-sm btn-outline-primary" @onclick="() => DownloadTheme(theme)">Export</button>
            </span>
        </li>
    }
</ul>

@code {
    private List<string> themes = new();
    private IBrowserFile? selectedFile;
    private string newThemeName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        themes = (await ThemeService.GetAvailableThemesAsync()).ToList();
    }

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task UploadTheme()
    {
        if (selectedFile != null)
        {
            using var stream = selectedFile.OpenReadStream();
            await ThemeService.ImportThemeAsync(newThemeName, stream);
            themes = (await ThemeService.GetAvailableThemesAsync()).ToList();
            selectedFile = null;
            newThemeName = string.Empty;
        }
    }

    private async Task ApplyTheme(string theme)
    {
        await ThemeService.SetThemeAsync(theme);
    }

    private async Task DownloadTheme(string theme)
    {
        using var stream = await ThemeService.ExportThemeAsync(theme);
        using var ms = new MemoryStream();
        await stream.CopyToAsync(ms);
        var base64 = Convert.ToBase64String(ms.ToArray());
        await JS.InvokeVoidAsync("blazorDownloadFile", $"{theme}.css", "text/css", base64);
    }
}
