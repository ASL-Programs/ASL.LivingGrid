@page "/"
@using Microsoft.AspNetCore.Authorization
@using ASL.LivingGrid.WebAdminPanel.Services
@attribute [Authorize]
@inject IConfigurationService ConfigurationService
@inject ILocalizationService LocalizationService

&lt;PageTitle&gt;Dashboard - ASL LivingGrid&lt;/PageTitle&gt;

&lt;div class="dashboard"&gt;
    &lt;div class="row"&gt;
        &lt;div class="col-12"&gt;
            &lt;h1 class="display-4"&gt;@localizedStrings["Common.Welcome"]&lt;/h1&gt;
            &lt;p class="lead"&gt;ASL LivingGrid Web Admin Panel&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    
    &lt;div class="row mt-4"&gt;
        &lt;div class="col-md-3"&gt;
            &lt;div class="card text-white bg-primary"&gt;
                &lt;div class="card-body"&gt;
                    &lt;div class="d-flex justify-content-between"&gt;
                        &lt;div&gt;
                            &lt;h4 class="card-title"&gt;@systemStats.TotalUsers&lt;/h4&gt;
                            &lt;p class="card-text"&gt;Total Users&lt;/p&gt;
                        &lt;/div&gt;
                        &lt;div class="align-self-center"&gt;
                            &lt;i class="fas fa-users fa-2x"&gt;&lt;/i&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        
        &lt;div class="col-md-3"&gt;
            &lt;div class="card text-white bg-success"&gt;
                &lt;div class="card-body"&gt;
                    &lt;div class="d-flex justify-content-between"&gt;
                        &lt;div&gt;
                            &lt;h4 class="card-title"&gt;@systemStats.TotalCompanies&lt;/h4&gt;
                            &lt;p class="card-text"&gt;Companies&lt;/p&gt;
                        &lt;/div&gt;
                        &lt;div class="align-self-center"&gt;
                            &lt;i class="fas fa-building fa-2x"&gt;&lt;/i&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        
        &lt;div class="col-md-3"&gt;
            &lt;div class="card text-white bg-warning"&gt;
                &lt;div class="card-body"&gt;
                    &lt;div class="d-flex justify-content-between"&gt;
                        &lt;div&gt;
                            &lt;h4 class="card-title"&gt;@systemStats.ActiveSessions&lt;/h4&gt;
                            &lt;p class="card-text"&gt;Active Sessions&lt;/p&gt;
                        &lt;/div&gt;
                        &lt;div class="align-self-center"&gt;
                            &lt;i class="fas fa-users-cog fa-2x"&gt;&lt;/i&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        
        &lt;div class="col-md-3"&gt;
            &lt;div class="card text-white bg-info"&gt;
                &lt;div class="card-body"&gt;
                    &lt;div class="d-flex justify-content-between"&gt;
                        &lt;div&gt;
                            &lt;h4 class="card-title"&gt;@systemStats.TotalEvents&lt;/h4&gt;
                            &lt;p class="card-text"&gt;System Events&lt;/p&gt;
                        &lt;/div&gt;
                        &lt;div class="align-self-center"&gt;
                            &lt;i class="fas fa-chart-line fa-2x"&gt;&lt;/i&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    
    &lt;div class="row mt-4"&gt;
        &lt;div class="col-md-8"&gt;
            &lt;div class="card"&gt;
                &lt;div class="card-header"&gt;
                    &lt;h5 class="card-title mb-0"&gt;Recent Activity&lt;/h5&gt;
                &lt;/div&gt;
                &lt;div class="card-body"&gt;
                    @if (recentActivities.Any())
                    {
                        &lt;div class="list-group list-group-flush"&gt;
                            @foreach (var activity in recentActivities)
                            {
                                &lt;div class="list-group-item d-flex justify-content-between align-items-start"&gt;
                                    &lt;div class="ms-2 me-auto"&gt;
                                        &lt;div class="fw-bold"&gt;@activity.Action&lt;/div&gt;
                                        &lt;small class="text-muted"&gt;@activity.UserName - @activity.Timestamp.ToString("yyyy-MM-dd HH:mm")"&lt;/small&gt;
                                    &lt;/div&gt;
                                    &lt;span class="badge bg-primary rounded-pill"&gt;@activity.EntityType&lt;/span&gt;
                                &lt;/div&gt;
                            }
                        &lt;/div&gt;
                    }
                    else
                    {
                        &lt;p class="text-muted"&gt;No recent activity.&lt;/p&gt;
                    }
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        
        &lt;div class="col-md-4"&gt;
            &lt;div class="card"&gt;
                &lt;div class="card-header"&gt;
                    &lt;h5 class="card-title mb-0"&gt;System Information&lt;/h5&gt;
                &lt;/div&gt;
                &lt;div class="card-body"&gt;
                    &lt;dl class="row"&gt;
                        &lt;dt class="col-sm-5"&gt;Version:&lt;/dt&gt;
                        &lt;dd class="col-sm-7"&gt;@systemInfo.Version&lt;/dd&gt;
                        
                        &lt;dt class="col-sm-5"&gt;Uptime:&lt;/dt&gt;
                        &lt;dd class="col-sm-7"&gt;@systemInfo.Uptime&lt;/dd&gt;
                        
                        &lt;dt class="col-sm-5"&gt;Database:&lt;/dt&gt;
                        &lt;dd class="col-sm-7"&gt;@systemInfo.DatabaseType&lt;/dd&gt;
                        
                        &lt;dt class="col-sm-5"&gt;Environment:&lt;/dt&gt;
                        &lt;dd class="col-sm-7"&gt;@systemInfo.Environment&lt;/dd&gt;
                    &lt;/dl&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

@code {
    private Dictionary&lt;string, string&gt; localizedStrings = new();
    private SystemStats systemStats = new();
    private SystemInfo systemInfo = new();
    private List&lt;Models.AuditLog&gt; recentActivities = new();

    protected override async Task OnInitializedAsync()
    {
        // Load localized strings
        localizedStrings = await LocalizationService.GetAllStringsAsync("az");
        
        // Add default strings if not exists
        if (!localizedStrings.ContainsKey("Common.Welcome"))
        {
            localizedStrings.Add("Common.Welcome", "Xoş gəlmisiniz");
        }

        // Load system statistics (mock data for now)
        systemStats = new SystemStats
        {
            TotalUsers = 15,
            TotalCompanies = 3,
            ActiveSessions = 8,
            TotalEvents = 1247
        };

        // Load system information
        systemInfo = new SystemInfo
        {
            Version = "1.0.0",
            Uptime = DateTime.Now.ToString("dd days HH:mm"),
            DatabaseType = "SQLite",
            Environment = "Development"
        };

        // Load recent activities (this would come from AuditService in real implementation)
        recentActivities = new List&lt;Models.AuditLog&gt;
        {
            new() { Action = "User Login", UserName = "admin@asl.az", EntityType = "User", Timestamp = DateTime.Now.AddMinutes(-5) },
            new() { Action = "Configuration Updated", UserName = "admin@asl.az", EntityType = "Config", Timestamp = DateTime.Now.AddMinutes(-15) },
            new() { Action = "Company Created", UserName = "admin@asl.az", EntityType = "Company", Timestamp = DateTime.Now.AddHours(-1) }
        };
    }

    public class SystemStats
    {
        public int TotalUsers { get; set; }
        public int TotalCompanies { get; set; }
        public int ActiveSessions { get; set; }
        public int TotalEvents { get; set; }
    }

    public class SystemInfo
    {
        public string Version { get; set; } = "";
        public string Uptime { get; set; } = "";
        public string DatabaseType { get; set; } = "";
        public string Environment { get; set; } = "";
    }
}

&lt;style&gt;
    .dashboard .card {
        transition: transform 0.2s;
    }

    .dashboard .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .list-group-item {
        border-left: none;
        border-right: none;
    }

    .list-group-item:first-child {
        border-top: none;
    }

    .list-group-item:last-child {
        border-bottom: none;
    }
&lt;/style&gt;
